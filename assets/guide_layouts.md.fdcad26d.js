import{_ as a,o as e,c as l,Q as o}from"./chunks/framework.eb963252.js";const m=JSON.parse('{"title":"layouts","description":"","frontmatter":{},"headers":[],"relativePath":"guide/layouts.md","filePath":"guide/layouts.md","lastUpdated":1697325057000}'),s={name:"guide/layouts.md"},i=o(`<h1 id="layouts" tabindex="-1">layouts <a class="header-anchor" href="#layouts" aria-label="Permalink to &quot;layouts&quot;">​</a></h1><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">container</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Container</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  el: </span><span style="color:#9ECBFF;">&#39;#container&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  layouts: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    items: layoutData,</span></span>
<span class="line"><span style="color:#E1E4E8;">    margin: [</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    size: [</span><span style="color:#79B8FF;">120</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 其他配置 ...</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">container</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Container</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  el: </span><span style="color:#032F62;">&#39;#container&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  layouts: {</span></span>
<span class="line"><span style="color:#24292E;">    items: layoutData,</span></span>
<span class="line"><span style="color:#24292E;">    margin: [</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    size: [</span><span style="color:#005CC5;">120</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">80</span><span style="color:#24292E;">],</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 其他配置 ...</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="layouts-1" tabindex="-1">layouts <a class="header-anchor" href="#layouts-1" aria-label="Permalink to &quot;layouts&quot;">​</a></h3><ul><li><p>type1: <code>CustomLayoutsOptions</code></p></li><li><p>type2: <code>CustomLayoutsOption | CustomLayoutsOption[]</code></p></li><li><p>required: <code>false</code></p><p>当前的布局配置，可以是一个配置对象或者配置对象数组</p></li></ul><h3 id="layouts-items" tabindex="-1">layouts.items <a class="header-anchor" href="#layouts-items" aria-label="Permalink to &quot;layouts.items&quot;">​</a></h3><ul><li><p>type1: <code>CustomItems</code></p></li><li><p>type2: <code>CustomItem[]</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>[]</code></p><p>当前布局使用的数据, CustomItem配置详见 <a href="./item.html">Item</a></p></li></ul><h3 id="layouts-px" tabindex="-1">layouts.px <a class="header-anchor" href="#layouts-px" aria-label="Permalink to &quot;layouts.px&quot;">​</a></h3><ul><li><p>type: <code>number</code></p></li><li><p>required: <code>false</code></p><p>使用多个layout预设布局方案请必须指定对应的像素px,单位为数字, 假设px=1024表示Container宽度1024像素以下执行该布局方案</p></li></ul><h3 id="layouts-autogrow-vertical" tabindex="-1">layouts.autoGrow.vertical <a class="header-anchor" href="#layouts-autogrow-vertical" aria-label="Permalink to &quot;layouts.autoGrow.vertical&quot;">​</a></h3><ul><li><p>type: <code>boolean</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>false</code></p><p>响应式下resize和drag是否自动撑开垂直方向的容器</p></li></ul><h3 id="layouts-autogrow-horizontal" tabindex="-1">layouts.autoGrow.horizontal <a class="header-anchor" href="#layouts-autogrow-horizontal" aria-label="Permalink to &quot;layouts.autoGrow.horizontal&quot;">​</a></h3><ul><li><p>type: <code>boolean</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>false</code></p><p>响应式下resize和drag是否自动撑开水平方向的容器</p></li></ul><h3 id="layouts-col" tabindex="-1">layouts.col <a class="header-anchor" href="#layouts-col" aria-label="Permalink to &quot;layouts.col&quot;">​</a></h3><ul><li><p>type: <code>number</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>1</code></p><p>列数</p></li></ul><h3 id="layouts-row" tabindex="-1">layouts.row <a class="header-anchor" href="#layouts-row" aria-label="Permalink to &quot;layouts.row&quot;">​</a></h3><ul><li><p>type: <code>number</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>1</code></p><p>行数, 响应模式下row由引擎管理且row不可固定，用户指定的row永远不会生效</p></li></ul><h3 id="layouts-margin" tabindex="-1">layouts.margin <a class="header-anchor" href="#layouts-margin" aria-label="Permalink to &quot;layouts.margin&quot;">​</a></h3><ul><li><p>type: <code>MarginOrSizeDesc</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>[null, null]</code></p><p><br>margin = [marginX, marginY] <br>该margin最终会被解析为: <br>marginX = margin[0] <br>marginY = margin[1] <br>后面提到的所有的marginX都表示 marginX 或者 margin[0]，marginY同理</p></li></ul><h3 id="layouts-marginx" tabindex="-1">layouts.marginX <a class="header-anchor" href="#layouts-marginx" aria-label="Permalink to &quot;layouts.marginX&quot;">​</a></h3><ul><li>type: <code>null | number</code></li><li>required: <code>false</code></li><li>default <code>null</code></li></ul><p><br>marginX = marginLeft + marginRight <br>marginLeft 和 marginRight是相等的</p><h3 id="layouts-marginy" tabindex="-1">layouts.marginY <a class="header-anchor" href="#layouts-marginy" aria-label="Permalink to &quot;layouts.marginY&quot;">​</a></h3><ul><li><p>type: <code>null | number</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>null</code></p><p><br>marginY = marginTop + marginBottom <br>marginTop 和 marginBottom是相等的</p></li></ul><h3 id="layouts-size" tabindex="-1">layouts.size <a class="header-anchor" href="#layouts-size" aria-label="Permalink to &quot;layouts.size&quot;">​</a></h3><ul><li><p>type: <code>MarginOrSizeDesc</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>[null, null]</code></p><p><br>size = [sizeWidth, sizeHeight] <br>该margin最终会被解析为: <br>sizeWidth = size[0] <br>sizeHeight = size[1] <br>后面提到的所有的sizeWidth都表示 sizeWidth 或者 size[0]，sizeHeight同理</p></li></ul><h3 id="layouts-sizewidth" tabindex="-1">layouts.sizeWidth <a class="header-anchor" href="#layouts-sizewidth" aria-label="Permalink to &quot;layouts.sizeWidth&quot;">​</a></h3><ul><li><p>type: <code>null | number</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>null</code></p><p><br>成员宽度 <br>sizeWidth优先级大于 size[0] <br>在sizeWidth,col,marginX都未指定的情况下将和sizeHeight大小一致</p></li></ul><h3 id="layouts-sizeheight" tabindex="-1">layouts.sizeHeight <a class="header-anchor" href="#layouts-sizeheight" aria-label="Permalink to &quot;layouts.sizeHeight&quot;">​</a></h3><ul><li><p>type: <code>null | number</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>null</code></p><p><br>成员高度 <br>sizeHeight优先级大于 size[1] <br>sizeHeight,row,marginY都未指定的情况下将和sizeWidth大小一致</p></li></ul><h3 id="layouts-mincol" tabindex="-1">layouts.minCol <a class="header-anchor" href="#layouts-mincol" aria-label="Permalink to &quot;layouts.minCol&quot;">​</a></h3><ul><li><p>type: <code>null | number</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>null</code></p><p>最小列数</p></li></ul><h3 id="layouts-maxcol-future" tabindex="-1">layouts.maxCol(<code>* Future</code>) <a class="header-anchor" href="#layouts-maxcol-future" aria-label="Permalink to &quot;layouts.maxCol(\`* Future\`)&quot;">​</a></h3><ul><li><p>type: <code>null | number</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>null</code></p><p>最大列数</p></li></ul><h3 id="layouts-minrow" tabindex="-1">layouts.minRow <a class="header-anchor" href="#layouts-minrow" aria-label="Permalink to &quot;layouts.minRow&quot;">​</a></h3><ul><li><p>type: <code>null | number</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>null</code></p><p>最小行数，只是限制外层容器高度，实际行数超出部分会出现滚动条</p></li></ul><h3 id="layouts-maxrow-future" tabindex="-1">layouts.maxRow(<code>* Future</code>) <a class="header-anchor" href="#layouts-maxrow-future" aria-label="Permalink to &quot;layouts.maxRow(\`* Future\`)&quot;">​</a></h3><ul><li><p>type: <code>null | number</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>null</code></p><p>最大行数，只是限制外层容器高度，实际行数超出部分会出现滚动条</p></li></ul><h3 id="layouts-ratiocol" tabindex="-1">layouts.ratioCol <a class="header-anchor" href="#layouts-ratiocol" aria-label="Permalink to &quot;layouts.ratioCol&quot;">​</a></h3><ul><li><p>type: <code>number</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>0.1</code></p><p><br>只设置了<code>col</code>，而没有指定<code>marginX</code>和<code>sizeWidth</code>情况下实现col方向自动铺满, <br>或者没有<code>col</code>只有<code>marginX</code>情况下， <code>ratioCol = marginX/sizeWidth</code></p><p><br>注意: 必须为container所挂载的元素指定宽高,且col方向没有指定size和margin才能生效</p></li></ul><h3 id="layouts-ratiorow" tabindex="-1">layouts.ratioRow <a class="header-anchor" href="#layouts-ratiorow" aria-label="Permalink to &quot;layouts.ratioRow&quot;">​</a></h3><ul><li><p>type: <code>number</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>0.1</code></p><p><br>只设置了<code>row</code>，而没有指定<code>marginY</code>和<code>sizeHeight</code>情况下实现row方向自动铺满, <br>或者没有<code>row</code>只有<code>marginY</code>情况下， <code>ratioRow = marginY/sizeHeight</code></p><p><br>注意: 必须为container所挂载的元素指定宽高,且col方向没有指定size和margin才能生效</p></li></ul><h3 id="layouts-exchange" tabindex="-1">layouts.exchange <a class="header-anchor" href="#layouts-exchange" aria-label="Permalink to &quot;layouts.exchange&quot;">​</a></h3><ul><li><p>type: <code>boolean</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>false</code></p><p><br>该容器是否允许其他容器成员进入 <br>和Item的exchange不同的是container的控制整个自身容器</p></li></ul><h3 id="layouts-presstime" tabindex="-1">layouts.pressTime <a class="header-anchor" href="#layouts-presstime" aria-label="Permalink to &quot;layouts.pressTime&quot;">​</a></h3><ul><li><p>type: <code>number</code></p></li><li><p>required: <code>false</code></p></li><li><p>default <code>360</code></p><p>触屏下长按多久响应拖拽事件,默认360ms</p></li></ul>`,46),t=[i];function n(r,p,c,d,u,y){return e(),l("div",null,t)}const b=a(s,[["render",n]]);export{m as __pageData,b as default};
